var closeWin;var dhxWins;var isSubmitOrder = true;var randCodeForm;var submitOrderClickEvent;var preStepClickEvent;(function () {    $(document).ready(function () {        var a = f();        j(a);        $("#randCode").on("keyup", function () {            if (!($("#randCode").val() != "" && $("#randCode").val().length == 4)) {                $("#i-ok").css("display", "none")            }        })    });    var k;    function j(G) {        dhxWins = new dhtmlXWindows();        dhxWins.enableAutoViewport(true);        dhxWins.setSkin("dhx_terrace");        dhxWins.setImagePath(ctx + "resources/js/rich/windows/imgs/");        closeWin = function (l, m) {            unLoadGrayBackground();            ableClickSubmitButtonOrPreStepBUtton();            if (dhxWins.isWindow(l + "_")) {                dhxWins.window(l + "_").setModal(false);                dhxWins.window(l + "_").hide();                if (m) {                    $("#randCode").val("");                    refreshImg("passenger", "randp")                }            }        };        k = function (l, o, r, t, p) {            var m = '<div class="tit">' + (o ? '<span class="colorC">' + l + "</span>" : l) + "</div>";            var q = "<P>" + r + "</p>";            var n = o ? '<p>请点击[<a href="' + ctx + 'queryOrder/init"><strong>我的12306</strong></a>]办理其他业务。您也可以点击[<a href="' + ctx + 'leftTicket/init"><strong>预订车票</strong></a>]，重新规划您的旅程。</p>' : '<P>查看订单处理情况，请点击“<a href="' + ctx + 'queryOrder/initNoComplete">未完成订单</a>”</P>';            $("#iamge_status_id").removeClass().addClass("icon i-" + p);            if (t) {                $("#up-box-hd_id").html("提示<a id='closeTranforDialog_id' href='#nogo'>关闭</a>");                n = "";                $("#lay-btn_id").html("<a href='#nogo' id='qr_closeTranforDialog_id'  class='btn92s'>确认</a>")            } else {                $("#up-box-hd_id").html("提示");                $("#lay-btn_id").html("")            }            $("#orderResultInfo_id").html(m + (r == "" || r == null || r == "undefined" || r == undefined ? "" : q) + n);            c("transforNotice_id");            if (t) {                $("#closeTranforDialog_id").click(function () {                    closeWin("transforNotice_id", true)                });                $("#qr_closeTranforDialog_id").click(function () {                    closeWin("transforNotice_id", true);                    $("#i-ok").css("display", "none")                })            }        };        function c(l) {            closeWin(l, false);            disableClickSubmitButtonOrPreStepBUtton();            if ("checkticketinfo_id" == l) {                var n = ticketInfoForPassengerForm.queryLeftNewDetailDTO;                if (n.to_station_telecode == ticket_submit_order.special_areas.lso || n.to_station_telecode == ticket_submit_order.special_areas.dao || n.to_station_telecode == ticket_submit_order.special_areas.ado || n.to_station_telecode == ticket_submit_order.special_areas.nqo || n.to_station_telecode == ticket_submit_order.special_areas.tho) {                    if (b()) {                        $("#notice_1_id").html("1.系统将随机为您申请席位，暂不支持自选席位。");                        $("#notice_2_id").html("2.根据现行规定，外国人在购买进西藏火车票时，须出示西藏自治区外事办公室或旅游局、商务厅的批准函（电），或者出示中国内地司局级接待单位出具的、已征得自治区上述部门同意的证明信函。台湾同胞赴藏从事旅游、商务活动，须事先向西藏自治区旅游局或商务厅提出申请，购买进藏火车票时须出示有关批准函。");                        if (Q()) {                            $("#notice_3_id").html("3.按现行规定，学生票购票区间必须与学生证上的乘车区间一致，否则车站将不予换票。")                        } else {                            $("#notice_3_id").html("")                        }                    }                } else {                    $("#notice_1_id").html("1.系统将随机为您申请席位，暂不支持自选席位。");                    if (Q()) {                        $("#notice_3_id").html("2.按现行规定，学生票购票区间必须与学生证上的乘车区间一致，否则车站将不予换票。")                    } else {                        $("#notice_3_id").html("")                    }                }            }            var o = T(l);            var p = $(window).width() / 2 - 300;            var m = P() + ($(window).height() / 2 - 200);            o.setDimension($("#content_" + l).width(), $("#content_" + l).height() + 10);            $(".dhtmlx_window_active").height($("#content_" + l).height());            $(".dhtmlx_window_active").css({                left: p + "px",                top: m + "px"            })        }        function Q() {            for (var l = 0; l < limit_tickets.length; l++) {                var m = limit_tickets[l];                if (m.ticket_type == ticket_submit_order.ticket_type.student) {                    return true                }            }            return false        }        function b() {            for (var l = 0; l < limit_tickets.length; l++) {                var m = limit_tickets[l];                if ((ticketInfoForPassengerForm.tour_flag == ticket_submit_order.tour_flag.fc || ticketInfoForPassengerForm.tour_flag == ticket_submit_order.tour_flag.gc) && m.save_status != "" && m.id_type == ticket_submit_order.passenger_card_type.passport) {                    return true                } else {                    if ((ticketInfoForPassengerForm.tour_flag == ticket_submit_order.tour_flag.wc || ticketInfoForPassengerForm.tour_flag == ticket_submit_order.tour_flag.dc) && m.id_type == ticket_submit_order.passenger_card_type.passport) {                        return true                    }                }            }            return false        }        $("#close_checkticketdialog_id").click(function () {            closeWin("checkticketinfo_id", true)        });        $("#back_edit_id").click(function () {            $("#qr_submit_id").show();            closeWin("checkticketinfo_id", true);            $("#i-ok").css("display", "none")        });        function F() {            if (ticketInfoForPassengerForm.isAsync == ticket_submit_order.request_flag.isAsync) {                R(ticketInfoForPassengerForm.tour_flag)            } else {                e(ticketInfoForPassengerForm.tour_flag)            }        }        function I() {            var l = $("#qr_submit_id");            l.unbind("click");            l.removeClass("btn92s").addClass("btn92")        }        function J() {            var l = $("#qr_submit_id");            l.bind("click", O);            l.removeClass("btn92").addClass("btn92s")        }        function O() {            closeWin("checkticketinfo_id", false);            loadGrayBackground();            F()        }        function N(l) {            if (S()) {                disableClickSubmitButtonOrPreStepBUtton();                E()            } else {                unLoadGrayBackground();                return            }        }        submitOrderClickEvent = function () {            loadGrayBackground();            N()        };        function T(l) {            var m = dhxWins.createWindow(l + "_", 0, 0, 660, 100);            m.attachObject(l);            m.clearIcon();            m.denyResize();            m.setModal(true);            m.center();            m.button("park").hide();            m.button("minmax1").hide();            m.hideHeader();            return m        }        function P() {            if ("pageYOffset" in window) {                return window.pageYOffset            } else {                if (document.compatMode == "BackCompat") {                    return document.body.scrollTop                } else {                    return document.documentElement.scrollTop                }            }        }        function e(m) {            k("正在处理，请稍候。", false, "", false, "work");            var l;            if (m == ticket_submit_order.tour_flag.dc) {                l = ctx + "confirmPassenger/confirmSingle"            } else {                if (m == ticket_submit_order.tour_flag.wc) {                    l = ctx + "confirmPassenger/confirmGo"                } else {                    if (m == ticket_submit_order.tour_flag.fc) {                        l = ctx + "confirmPassenger/confirmBack"                    } else {                        if (m == ticket_submit_order.tour_flag.gc) {                            l = ctx + "confirmPassenger/confirmResign"                        } else {                            k("订票失败!", true, "原因： 旅程形式为<span style='color:red'>" + m + "</sapn>,非法的旅程方式", true, "lose");                            return                        }                    }                }            }            $.ajax({                url: l,                type: "post",                data: {                    passengerTicketStr: getpassengerTickets(),                    oldPassengerStr: getOldPassengers(),                    tour_flag: ticketInfoForPassengerForm.tour_flag,                    randCode: $("#randCode").val(),                    purpose_codes: ticketInfoForPassengerForm.purpose_codes,                    key_check_isChange: ticketInfoForPassengerForm.key_check_isChange,                    train_location: ticketInfoForPassengerForm.train_location                },                dataType: "json",                async: true,                success: function (n) {                    if (n.status) {                        if (n.data.submitStatus) {                            otsRedirect("post", ctx + "payOrder/init?random=" + new Date().getTime(), {})                        } else {                            k("出票失败!", false, "原因： " + n.data.errMsg + '<a  id="xg_close_win_id">点击修改</a>', false, "lose");                            $("#xg_close_win_id").click(function () {                                closeWin("transforNotice_id", true);                                $("#i-ok").css("display", "none")                            })                        }                    } else {                        k("订票失败!", true, "很抱歉！请关闭窗口重新预定车票", true, "lose")                    }                },                error: function (p, n, o) {                    k("订票失败!", true, "很抱歉！网络忙，请关闭窗口稍后再试。", true, "lose");                    return                }            })        }        function R(m) {            k("正在处理，请稍候。", false, "", false, "work");            var l;            if (m == ticket_submit_order.tour_flag.dc) {                l = ctx + "confirmPassenger/confirmSingleForQueue"            } else {                if (m == ticket_submit_order.tour_flag.wc) {                    l = ctx + "confirmPassenger/confirmGoForQueue"                } else {                    if (m == ticket_submit_order.tour_flag.fc) {                        l = ctx + "confirmPassenger/confirmBackForQueue"                    } else {                        if (m == ticket_submit_order.tour_flag.gc) {                            l = ctx + "confirmPassenger/confirmResignForQueue"                        } else {                            k("订票失败!", true, "原因： 旅程形式<span style='color:red'>" + m + "</sapn>为非法的旅程方式", true, "lose");                            return                        }                    }                }            }            $.ajax({                url: l,                data: {                    passengerTicketStr: getpassengerTickets(),                    oldPassengerStr: getOldPassengers(),                    randCode: $("#randCode").val(),                    purpose_codes: ticketInfoForPassengerForm.purpose_codes,                    key_check_isChange: ticketInfoForPassengerForm.key_check_isChange,                    leftTicketStr: ticketInfoForPassengerForm.leftTicketStr,                    train_location: ticketInfoForPassengerForm.train_location                },                type: "POST",                dataType: "json",                success: function (o) {                    if (o.status) {                        if (!o.data.submitStatus) {                            k("出票失败!", false, "原因： " + o.data.errMsg + '<a id="xg_close_win_id" >点击修改</a>', false, "lose");                            $("#xg_close_win_id").click(function () {                                closeWin("transforNotice_id", true);                                $("#i-ok").css("display", "none")                            })                        } else {                            var n = new OrderQueueWaitTime(m, V, a);                            n.start()                        }                    } else {                        k("订票失败!", true, "很抱歉！请关闭窗口重新预定车票", true, "lose")                    }                },                error: function (p, n, o) {                    k("订票失败!", true, "很抱歉！网络忙，请关闭窗口稍后再试。", true, "lose");                    return                }            })        }        function V(n, l, m) {            if (l <= 5) {                k("订单已经提交，系统正在处理中，请稍等。", false, "", false, "work")            } else {                if (l > 30 * 60) {                    k("订单已经提交，预计等待时间超过30分钟，请耐心等待。", false, "", false, "queue")                } else {                    k("订单已经提交，最新预估等待时间" + m + "，请耐心等待。", false, "", false, "queue")                }            }        }        function a(o, l, n) {            if (l == -1) {                var m = "";                if (o == ticket_submit_order.tour_flag.dc) {                    m = ctx + "confirmPassenger/resultOrderForDcQueue"                } else {                    if (o == ticket_submit_order.tour_flag.wc) {                        m = ctx + "confirmPassenger/resultOrderForWcQueue"                    } else {                        if (o == ticket_submit_order.tour_flag.fc) {                            m = ctx + "confirmPassenger/resultOrderForFcQueue"                        } else {                            if (o == ticket_submit_order.tour_flag.gc) {                                m = ctx + "confirmPassenger/resultOrderForGcQueue"                            }                        }                    }                }                $.ajax({                    url: m,                    data: {                        orderSequence_no: n.orderId                    },                    type: "POST",                    dataType: "json",                    success: function (p) {                        if (p.status) {                            if (p.data.submitStatus) {                                otsRedirect("post", ctx + "/payOrder/init?random=" + new Date().getTime(), {})                            } else {                                k("下单成功", false, "", false, "win")                            }                        } else {                            k("下单成功。", false, "", false, "win")                        }                    },                    error: function (r, p, q) {                        k("下单成功。", false, "", false, "win")                    }                })            } else {                d(l, n)            }        }        function d(m, l) {            if (m == -1) {                return            } else {                if (m == -2) {                    if (l.errorcode == 0) {                        k("订票失败!", true, "原因： " + l.msg, false, "lose")                    } else {                        k("订票失败!", true, "原因： " + l.msg, false, "lose")                    }                } else {                    if (m == -3) {                        k("哎呀,订票失败!", true, "订单已撤销", false, "lose")                    } else {                        window.location.href = ctx + "queryOrder/initNoComplete?random=" + new Date().getTime()                    }                }            }        }        function K(m, l) {            M(m, l)        }        function E() {            I();            $.ajax({                url: ctx + "confirmPassenger/checkOrderInfo",                type: "post",                data: {                    cancel_flag: "2",                    bed_level_order_num: "000000000000000000000000000000",                    //passengerTicketStr: getpassengerTickets(),                    passengerTicketStr: '3,0,1,姓名,1,身份证号,手机号,Y',                    oldPassengerStr: getOldPassengers(),                    tour_flag: ticketInfoForPassengerForm.tour_flag,                    randCode: $("#randCode").val()                },                dataType: "json",                async: true,                success: function (m) {                    if (m.status) {                        if (!m.data.submitStatus) {                            if (m.data.isRelogin) {                                window.location.href = ctx + "login/init?random=" + new Date().getTime()                            } else {                                if (m.data.isNoActive) {                                    k(m.data.errMsg, true, "", true, "warn")                                } else {                                    k("出票失败!", true, "原因： " + m.data.errMsg, true, "warn")                                }                            }                            return                        } else {                            var l = m.data.get608Msg;                            if (undefined != l && typeof (l) != "undefined" && "" != l) {                                dhtmlx.alert({                                    title: "警告",                                    ok: "确定",                                    text: l,                                    type: "alert-error",                                    callback: function () {                                        renderTickInfo(limit_tickets);                                        K(ticketInfoForPassengerForm.purpose_codes, m.data.isCheckOrderInfo, m.data.doneHMD)                                    }                                })                            } else {                                renderTickInfo(limit_tickets);                                K(ticketInfoForPassengerForm.purpose_codes, m.data.isCheckOrderInfo, m.data.doneHMD)                            }                        }                    } else {}                },                error: function (n, l, m) {                    k("网络忙，请稍后再试。", true, "", true, "warn");                    return                }            })        }        function M(n, m) {            var l = "";            if (ticketInfoForPassengerForm.isAsync == ticket_submit_order.request_flag.isAsync && ticketInfoForPassengerForm.queryLeftTicketRequestDTO.ypInfoDetail != "") {                $.ajax({                    url: ctx + "confirmPassenger/getQueueCount",                    type: "post",                    data: {                        train_date: new Date(orderRequestDTO.train_date.time).toString(),                        train_no: orderRequestDTO.train_no,                        stationTrainCode: orderRequestDTO.station_train_code,                        seatType: limit_tickets[0].seat_type,                        fromStationTelecode: orderRequestDTO.from_station_telecode,                        toStationTelecode: orderRequestDTO.to_station_telecode,                        leftTicket: ticketInfoForPassengerForm.queryLeftTicketRequestDTO.ypInfoDetail,                        purpose_codes: n,                        isCheckOrderInfo: m                    },                    dataType: "json",                    success: function (q) {                        if (q.status) {                            if (q.data.isRelogin == "Y") {                                window.location.href = ctx + "login/init?random=" + new Date().getTime()                            }                            var p = L(q.data.ticket, limit_tickets[0].seat_type).split(",");                            l = "本次列车，剩余" + (limit_tickets[0].seat_type_name).split("（")[0] + "<strong>" + p[0] + "</strong>张";                            if (p.length > 1) {                                l += ",无座<strong>" + p[1] + "</strong>张"                            }                            l += "。";                            if (q.data.op_2 == "true") {                                l += '<font color="red">目前排队人数已经超过余票张数，请您选择其他席别或车次。</font>';                                $("#qr_submit_id").hide()                            } else {                                if (q.data.countT > 0) {                                    l += '目前排队人数<font color="red">' + q.data.countT + "</font>人，";                                    l += "<br/>请确认以上信息是否正确，点击“确认”后，系统将为您随机分配席位。"                                }                            }                            var o = $("#sy_ticket_num_id");                            if (o != null) {                                o.html(l)                            }                            doTicketTitleShow(true);                            renderCheckTickInfo(limit_tickets);                            c("checkticketinfo_id");                            if (parseInt(p[0]) > 0 || parseInt(p[1]) > 0) {                                J()                            }                        } else {                            J()                        }                    },                    error: function (q, o, p) {                        J();                        return                    }                })            } else {                doTicketTitleShow(true);                renderCheckTickInfo(limit_tickets);                c("checkticketinfo_id");                J()            }        }        function L(l, m) {            rt = "";            seat_1 = -1;            seat_2 = -1;            i = 0;            while (i < l.length) {                s = l.substr(i, 10);                c_seat = s.substr(0, 1);                if (c_seat == m) {                    count = s.substr(6, 4);                    while (count.length > 1 && count.substr(0, 1) == "0") {                        count = count.substr(1, count.length)                    }                    count = parseInt(count);                    if (count < 3000) {                        seat_1 = count                    } else {                        seat_2 = (count - 3000)                    }                }                i = i + 10            }            if (seat_1 > -1) {                rt += seat_1            }            if (seat_2 > -1) {                rt += "," + seat_2            }            return rt        }        preStepClickEvent = function () {            otsRedirect("post", ctx + "leftTicket/init?random=" + new Date().getTime(), {                pre_step_flag: "preStep"            });            return false        };        function H(m, l) {            $("#" + m).removeClass("btn92s");            $("#" + m).addClass("btn92")        }        function U(m, l) {            $("#" + m).removeClass("btn92");            $("#" + m).addClass("btn92s")        }        function S() {            upadateSavePassengerInfo();            stepFirValidatorTicketInfo(false);            $("#randCode").blur();            var m = true;            var l = $("label[class='submitordererror']");            for (var n = 0; n < l.length; n++) {                if ($(l[n]).css("display") != "none") {                    m = false;                    break                }            }            if (m && h() && g()) {                return true            } else {                return false            }        }    }    function h() {        var c = $("span[id$='_check']");        var a = true;        for (var b = 0; b < c.length; b++) {            if ($(c[b]).css("display") != "none") {                a = false;                break            }        }        return a    }    function g() {        if (limit_tickets.length > init_limit_ticket_num) {            k("最多只能购买" + init_limit_ticket_num + "张票", true, "", true, "warn");            return false        } else {            if (limit_tickets.length < 1) {                k("至少选择一位乘客", true, "", true, "warn");                return false            }        }        var t = 0;        var c = new Array();        var w = new Array();        var v = "3456ACFGHL";        var d = new Array();        var a = new Array();        for (var r = 0; r < limit_tickets.length; r++) {            var b = limit_tickets[r];            a.push(b.ticket_type);            if ((ticket_submit_order.tour_flag.wc == ticketInfoForPassengerForm.tour_flag || ticket_submit_order.tour_flag.dc == ticketInfoForPassengerForm.tour_flag) && ticket_submit_order.ticket_type.child != b.ticket_type) {                if (jQuery.inArray(b.id_no, d) < 0) {                    d.push(b.id_no)                } else {                    var e = ticketInfoForPassengerForm.queryLeftTicketRequestDTO.train_date.substr(0, 4) + "年" + ticketInfoForPassengerForm.queryLeftTicketRequestDTO.train_date.substr(4, 2) + "月" + ticketInfoForPassengerForm.queryLeftTicketRequestDTO.train_date.substr(6, 2) + "日";                    k("出票失败", true, "互联网售票实行实名制：证件号<span style='color:red'><i><b>" + b.id_no + "</b></i></span>只能购买" + e + "车次" + ticketInfoForPassengerForm.queryLeftTicketRequestDTO.station_train_code + "的一张车票！", true, "warn");                    return false                }            } else {                if ((ticket_submit_order.tour_flag.wc == ticketInfoForPassengerForm.tour_flag || ticket_submit_order.tour_flag.dc == ticketInfoForPassengerForm.tour_flag) && b.save_status != "" && ticket_submit_order.ticket_type.child != b.ticket_type) {                    if (jQuery.inArray(b.id_no, d) < 0) {                        d.push(b.id_no)                    } else {                        var e = ticketInfoForPassengerForm.queryLeftTicketRequestDTO.train_date.substr(0, 4) + "年" + ticketInfoForPassengerForm.queryLeftTicketRequestDTO.train_date.substr(4, 2) + "月" + ticketInfoForPassengerForm.queryLeftTicketRequestDTO.train_date.substr(6, 2) + "日";                        k("出票失败", true, "互联网售票实行实名制：证件号<span style='color:red'><i><b>" + b.id_no + "</b></i></span>只能购买" + e + "车次" + ticketInfoForPassengerForm.queryLeftTicketRequestDTO.station_train_code + "的一张车票！", true, "warn");                        return false                    }                }            } if (b.save_status != "") {                t++;                if (ticket_submit_order.tour_flag.gc == ticketInfoForPassengerForm.tour_flag) {                    if (w.length > 0) {                        if (jQuery.inArray(b.seat_type, w) < 0) {                            k("出票失败", true, "改签时，必须选择相同席别", true, "warn");                            return false                        }                    }                    w.push(b.seat_type);                    if (v.indexOf(b.seat_type) > -1) {                        c.push(b.seat_type)                    }                    if (c.length > 1) {                        k("出票失败", true, "卧铺不支持批量改签，请单张改签！", true, "warn");                        return false                    }                }            }            if (b.ticket_type == ticket_submit_order.ticket_type.disability) {                var u = id_type_code;                if (u != ticket_submit_order.passenger_card_type.two) {                    k("出票失败", true, "第 " + (r + 1) + " 张车票： 当前登录用户证件类型不是二代身份证，购买残疾军人（伤残警察）优待票需使用中华人民共和国居民身份证！", true, "warn");                    return false                } else {                    if (b.id_type != ticket_submit_order.passenger_card_type.two) {                        k("出票失败", true, "第 " + (r + 1) + " 张车票： 乘客证件类型不是二代身份证，购买残疾军人（伤残警察）优待票需使用中华人民共和国居民身份证！", true, "warn");                        return false                    }                }            }            if (ticket_submit_order.tour_flag.wc == ticketInfoForPassengerForm.tour_flag || ticket_submit_order.tour_flag.dc == ticketInfoForPassengerForm.tour_flag) {                if (b.ticket_type == ticket_submit_order.ticket_type.student) {                    if (b.passenger_type != ticket_submit_order.passenger_type.student) {                        k("出票失败", true, "第 " + (r + 1) + " 张车票： 乘客不是学生，请从常用联系人中选择学生购买此车票。", true, "warn");                        return false                    }                }            }        }        if (jQuery.inArray(ticket_submit_order.ticket_type.child, a) == 0) {            if (jQuery.inArray(ticket_submit_order.ticket_type.adult, a) < 0) {                k("儿童不能单独旅行，请与成人票一同购买", true, "", true, "warn");                return false            }        }        if (ticket_submit_order.tour_flag.fc == ticketInfoForPassengerForm.tour_flag || ticket_submit_order.tour_flag.gc == ticketInfoForPassengerForm.tour_flag) {            if (t == 0) {                k(ticket_submit_order.tour_flag.fc == ticketInfoForPassengerForm.tour_flag ? "此次购买返程车票至少选择一位乘客" : "此次改签至少选择一位乘客", true, "", true, "warn");                return false            }        }        return true    }    function f() {        //randCodeForm = $("#randCodeForm_id").validate({        //    onkeyup: false,        //    focusInvalid: true,        //    errorLabelContainer: $("#randCodeErrorNotice_id"),        //    errorClass: "submitordererror",        //    rules: {        //        randCode: {        //            required: true,        //            randCodeFormat: true,        //            checkRandCode: "randp"        //        }        //    },        //    messages: {        //        randCode: {        //            required: "验证码不能为空",        //            randCodeFormat: "验证码只能由数字或字母组成!",        //            checkRandCode: "验证码错误!"        //        }        //    }        //});        //randCodeForm.checkForm();        //return randCodeForm        return true;    }})();var selectedTicketPassengerAll;var responseNormalPassengerClick;var addPassengerInfo;var responseDjPassengerClick;var delPassengerInfo;var upadateSavePassengerInfo;var getpassengerTickets;var getOldPassengers;var renderTickInfo;var limit_tickets;var doTicketTitleShow;var renderCheckTickInfo;var stepFirValidatorTicketInfo;var updateAllCheckBox;var updateSeatTypeByeTickeType;var getSeatTypePriceForSeatName;var getI18nResourceValueBykeyForJs;var getDjPassengerOfPassengerType;var getSuitNameByFlag;var getSeatTypePrices;var ableClickSubmitButtonOrPreStepBUtton;var disableClickSubmitButtonOrPreStepBUtton;(function () {    var aq = new Array();    var a4 = new Array();    var bc = new Array();    var aA = new Array();    var a5 = 8;    var aJ;    limit_tickets = new Array();    var a6 = null;    $(document).ready(function () {        a2();        az();        aJ = aT(ticket_seat_codeMap, defaultTicketTypes);        initPageTitle("1");        doTicketTitleShow(false);        bk();        aD();        if (ticketInfoForPassengerForm.tour_flag == ticket_submit_order.tour_flag.dc || ticketInfoForPassengerForm.tour_flag == ticket_submit_order.tour_flag.wc) {            aY();            aC();            aF()        }        $("#selected_ticket_passenger_all").prop("checked", true);        aV();        $.initLoginForm();        $("#randCode").on("keyup", function (a) {            a = a || window.event;            if ($("#randCode").val().length == 4 && a6 != $("#randCode").val()) {                $.ajax({                    url: ctx + "passcodeNew/checkRandCodeAnsyn",                    type: "post",                    data: {                        randCode: $("#randCode").val(),                        rand: "randp"                    },                    async: false,                    success: function (b) {                        if (b.data == "N") {                            $("#i-ok").css("display", "none")                        } else {                            submitOrderClickEvent();                            $("#randCode").removeClass("error");                            $("#randCodeErrorNotice_id").hide();                            $("#i-ok").css("display", "block");                            return                        }                    }                })            }            a6 = $("#randCode").val()        })    });    function az() {        $.views.helpers({            seatTypePriceForSeatName: function (a) {                return getSeatTypePriceForSeatName(a)            },            getValueBykeyFromI18N: function (a) {                getI18nResourceValueBykeyForJs(a)            },            getTourFlagByKey: function (a) {                return ticket_submit_order.tour_flag[a]            },            getTicketType: function (a) {                return ticket_submit_order.ticket_type[a]            },            getIdType: function (a) {                return ticket_submit_order.passenger_card_type[a]            },            getSuitName: function (b, a) {                return getSuitNameByFlag(b, a)            },            getCurrentUserIdType: function () {                return id_type_code            },            isExistWZ: function (a) {                if (ticket_submit_order.seatType.yz_type == a) {                    var b = getSeatTypePrices();                    for (var d = 0; d < b.length; d++) {                        var c = b[d];                        if (c.seat_type_name == "硬座" && c.wp_statu) {                            return true                        }                    }                }                return false            }        })    }    function aT(e, b) {        var a = new Array();        for (var c in e) {            for (var d in b) {                if (b[d].id == c) {                    a.push(b[d]);                    break                }            }        }        a = a.sort(function (g, f) {            if (f.id > g.id) {                return -1            } else {                if (f.id == g.id) {                    return 0                } else {                    return 1                }            }        });        return a    }    function av() {        $("#psInfo").mouseenter(function (a) {            var c = a.pageY + 10;            var b = a.pageX;            $(".srr-tips").eq(1).css({                top: c,                left: b            });            $(".srr-tips").eq(1).show()        });        $("#psInfo").mouseleave(function () {            $(".srr-tips").hide()        })    }    function aU() {        $("#psInfo").mouseenter(function (a) {            var c = a.pageY + 10;            var b = a.pageX;            $(".srr-tips").eq(0).css({                top: c,                left: b            });            $(".srr-tips").eq(0).show()        });        $("#psInfo").mouseleave(function () {            $(".srr-tips").hide()        })    }    jQuery.extend({        initLoginForm: function () {            $("#randCodeForm_id").validate({                wrapper: "li",                rules: {                    randCode: {                        randCodeRequired: true,                        randCodeLength: true,                        randCodeFormat: true,                        checkRandCode: "randp"                    }                },                errorPlacement: function () {}            })        }    });    function aV() {        $("#randCodeForm_id").on("submit", function (a) {            a.preventDefault()        })    }    function aE() {        $(".pos-rel input").focus(function () {            elemOnkeyupNotice(this);            $(this).next().show();            $(this).css("border", "1px solid #2D8DCF")        }).mouseover(function () {            if (!$(this).prop("disabled")) {                elemOnkeyupNotice(this);                $(this).next().show();                $(this).css("border", "1px solid #2D8DCF")            }        });        $(".pos-rel input").mouseout(function () {            $(this).next().hide();            $(this).css("border", "1px solid #CFCDC7")        });        $(".pos-rel input").blur(function () {            $(this).next().hide();            $(this).css("border", "1px solid #CFCDC7")        })    }    function aD() {        ap("0")    }    function ap(a) {        if (ticketInfoForPassengerForm.tour_flag == ticket_submit_order.tour_flag.fc && goOrderDTO != null) {            var d = goOrderDTO.tickets;            var b = new Array();            for (var c = 0; c < d.length; c++) {                var g = d[c];                b.push(new aO(new Date(g.train_date.time), new Date(g.stationTrainDTO.start_time.time), g.stationTrainDTO.station_train_code, g.stationTrainDTO.from_station_name, g.stationTrainDTO.to_station_name, g.seat_type_name, g.coach_name, g.seat_name, g.passengerDTO.passenger_name, g.passengerDTO.passenger_id_type_name, g.ticket_type_name, g.ticket_price));                limit_tickets.push(new bm("sdAdd_" + a1(), g.seat_type_code, g.seat_type_name, g.ticket_type_code, g.ticket_type_name, g.passengerDTO.passenger_name, g.passengerDTO.passenger_id_type_code, g.passengerDTO.passenger_id_type_name, g.passengerDTO.passenger_id_no, g.passengerDTO.mobile_no, "checked='checked'", ticketInfoForPassengerForm.tour_flag, true, "", true))            }            ba(b);            ableClickSubmitButtonOrPreStepBUtton()        } else {            if (ticketInfoForPassengerForm.tour_flag == ticket_submit_order.tour_flag.gc && oldTicketDTOs != null) {                var e = new Array();                for (var c = 0; c < oldTicketDTOs.length; c++) {                    var g = oldTicketDTOs[c];                    e.push(new aO(new Date(g.train_date.time), new Date(g.stationTrainDTO.start_time.time), g.stationTrainDTO.station_train_code, g.stationTrainDTO.from_station_name, g.stationTrainDTO.to_station_name, g.seat_type_name, g.coach_name, g.seat_name, g.passengerDTO.passenger_name, g.passengerDTO.passenger_id_type_name, g.ticket_type_name, g.ticket_price));                    limit_tickets.push(new bm("sdAdd_" + a1(), g.seat_type_code, g.seat_type_name, g.ticket_type_code, g.ticket_type_name, g.passengerDTO.passenger_name, g.passengerDTO.passenger_id_type_code, g.passengerDTO.passenger_id_type_name, g.passengerDTO.passenger_id_no, g.passengerDTO.mobile_no, "checked='checked'", ticketInfoForPassengerForm.tour_flag, true, "", true))                }                aK(e);                ableClickSubmitButtonOrPreStepBUtton()            } else {                var f = new bm("default_" + (Number(a1()) + Number(a)), "", "", ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student ? ticket_submit_order.ticket_type.student : "", "", "", "", "", "", "", ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student ? "" : "checked='checked'", ticketInfoForPassengerForm.tour_flag, ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student ? true : false, ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student ? ticket_submit_order.passenger_type.student : "", ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student ? false : true);                limit_tickets.push(f)            }        }        renderTickInfo(limit_tickets, false)    }    function a1() {        if (limit_tickets.length < 1) {            return limit_tickets.length        } else {            var a = 0;            for (var b = 0; b < limit_tickets.length; b++) {                var c = Number(limit_tickets[b].only_id.split("_")[1]);                if (c > a) {                    a = c                }            }            return a + 1        }    }    function aC() {        $("#quickQueryPassenger_id").blur(function () {            if ($.trim($("#quickQueryPassenger_id").val()) == "") {                $("#quickQueryPassenger_id").val("输入乘客姓名")            }        }).click(function () {            if ($.trim($("#quickQueryPassenger_id").val()) == "输入乘客姓名") {                $("#quickQueryPassenger_id").val("")            }        }).keyup(function () {            var a = $("#quickQueryPassenger_id").val();            aw(a)        });        $("#submit_quickQueryPassenger").click(function () {            aw($("#quickQueryPassenger_id").val())        })    }    function a8() {        if ($("#show_more_passenger_id").attr("flaged") == "flaged") {            return true        } else {            return false        }    }    function aF() {        $("#show_more_passenger_id").click(function () {            if ($("#show_more_passenger_id").attr("flaged") == "flaged") {                $("#show_more_passenger_id").removeAttr("flaged");                $("#show_more_passenger_id").attr("title", "展开");                $("#gd").html("更多");                $("#show_more_passenger_id").children().removeClass("open");                var b = aq.length > a5 ? aq.slice(0, a5) : aq;                bp(b);                aP(bc, b);                var a = a4.length > a5 ? a4.slice(0, a5) : a4;                aR(a);                aZ(aA, a);                renderTickInfo(limit_tickets, false)            } else {                $("#show_more_passenger_id").attr("flaged", "flaged");                $("#show_more_passenger_id").attr("title", "收起");                $("#gd").html("收起");                $("#show_more_passenger_id").children().addClass("open");                bp(aq);                aP(bc, aq);                aR(a4);                aZ(aA, a4);                renderTickInfo(limit_tickets, false)            }        })    }    function aw(a) {        a = $.trim(a).toLowerCase();        if (!(a == null || $.trim(a) == "" || a == "输入乘客姓名")) {            var e = new Array();            for (var d = 0; d < aq.length; d++) {                var b = aq[d];                if (b.passenger_name.toLowerCase().indexOf(a) > -1 || b.first_letter.toLowerCase().indexOf(a) > -1) {                    e.push(b)                }            }            bp(e);            aP(bc, e);            var c = new Array();            for (var d = 0; d < a4.length; d++) {                var b = a4[d];                if (b.passenger_name.toLowerCase().indexOf(a) > -1 || b.first_letter.toLowerCase().indexOf(a) > -1) {                    c.push(b)                }            }            aR(c);            aZ(aA, c)        } else {            var e = aq.length > a5 && !a8() ? aq.slice(0, a5) : aq;            bp(e);            aP(bc, e);            var c = a4.length > a5 && !a8() ? a4.slice(0, a5) : a4;            aR(c);            aZ(aA, c)        }        renderTickInfo(limit_tickets, false)    }    function aP(a, d) {        for (var b = 0; b < d.length; b++) {            var e = "djPassenger_" + d[b].passenger_name + "_" + d[b].passenger_id_type_code + "_" + d[b].passenger_id_no + "_" + (d[b].mobile_no == "" ? "null" : d[b].mobile_no);            for (var c = 0; c < a.length; c++) {                if (a[c] == e) {                    $("#" + e).prop("checked", true);                    $("#" + e).next().removeClass().addClass("colorA")                }            }        }    }    function aZ(a, d) {        for (var b = 0; b < d.length; b++) {            var e = "normalPassenger_" + d[b].passenger_name + "_" + d[b].passenger_id_type_code + "_" + d[b].passenger_id_no + "_" + (d[b].mobile_no == "" ? "null" : d[b].mobile_no);            for (var c = 0; c < a.length; c++) {                if (a[c] == e) {                    $("#" + e).prop("checked", true);                    $("#" + e).next().removeClass().addClass("colorA")                }            }        }    }    responseDjPassengerClick = function (g) {        var c = "";        if ($(g).attr("id").split("_")[0] == "djPassenger") {            c = aI($(g).attr("id"))        } else {            if ($(g).attr("id").split("_")[0] == "normalPassenger") {                c = aQ($(g).attr("id"))            }        } if (g.checked) {            var d = a0(limit_tickets);            if (d >= init_limit_ticket_num) {                g.checked = false;                ax("提示", "最多只能购买" + init_limit_ticket_num + "张车票");                return            }            var i = aq[c.split("_")[1]];            var f = ar(i.passenger_type);            var b = new bm(c, "", "", f, "", i.passenger_name, i.passenger_id_type_code, i.passenger_id_type_name, i.passenger_id_no, i.mobile_no, "", ticketInfoForPassengerForm.tour_flag, true, i.passenger_type, false);            if (!aL(b)) {                ax("提示", "对不起，现登录用户证件类型不是一二代身份证，不能替证件类型为一二代身份证的乘车人<span style='color:black;font-size:30px'><i>" + b.name + "</i></span> 代购车票");                g.checked = false;                return            }            var h = bg(b);            if (h == "0") {                limit_tickets.push(b)            } else {                if (h == "1") {                    ax("提示", "请从常用联系人中选择学生旅客");                    g.checked = false;                    return                } else {                    if (h == "2") {                        ax("提示", "请从常用联系人中选择学生旅客");                        g.checked = false;                        return                    }                }            } if (ticket_seat_codeMap[b.ticket_type].length < 1) {                ax("提示", "很抱歉，" + ticket_submit_order.ticket_type_name[b.ticket_type] + "余票不足！")            }            bc.push($(g).attr("id"));            $(g).next().removeClass().addClass("colorA");            if (i.passenger_type == "3") {                if (!IsStudentDate) {                    ax("提示", "学生票的乘车时间为每年的暑假6月1日至9月30日、寒假12月1日至3月31日，目前不办理学生票业务。")                }            }            renderTickInfo(limit_tickets, false)        } else {            $(g).next().removeClass();            for (var e = 0; e < bc.length; e++) {                if (bc[e] == $(g).attr("id")) {                    bc.splice(e, 1);                    break                }            }            for (var e = 0; e < limit_tickets.length; e++) {                var a = limit_tickets[e].only_id;                if (a == c) {                    limit_tickets.splice(e, 1);                    if (limit_tickets.length < 1) {                        ap("0")                    }                }            }            renderTickInfo(limit_tickets, false)        }    };    function ar(a) {        if (a == ticket_submit_order.passenger_type.adult) {            return ticket_submit_order.passenger_type.adult        } else {            if (a == ticket_submit_order.passenger_type.child) {                return ticket_submit_order.passenger_type.child            } else {                if (a == ticket_submit_order.passenger_type.student) {                    return ticket_submit_order.passenger_type.student                } else {                    if (a == ticket_submit_order.passenger_type.disability) {                        return ticket_submit_order.passenger_type.disability                    } else {                        return ""                    }                }            }        }    }    function aL(a) {        var b = id_type_code;        if (b != ticket_submit_order.passenger_card_type.two && b != ticket_submit_order.passenger_card_type.one) {            if (a.id_type == ticket_submit_order.passenger_card_type.two || a.id_type == ticket_submit_order.passenger_card_type.one) {                return false            }        }        return true    }    function ay(a, c, d) {        var b = aG(a, c, d);        return b    }    function aG(b, c, e) {        var d = ar(b);        if (ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student) {            return ticket_submit_order.ticket_type.student        } else {            if (b == ticket_submit_order.passenger_type.disability) {                var a = id_type_code;                if (a != ticket_submit_order.passenger_card_type.two || c != ticket_submit_order.passenger_card_type.two) {                    return ticket_submit_order.ticket_type.adult                } else {                    return d                }            } else {                return d == "" ? (e == "" ? ticket_submit_order.ticket_type.adult : e) : d            }        }    }    function bg(a) {        upadateSavePassengerInfo();        var c = "0";        for (var b = 0; b < limit_tickets.length; b++) {            var d = limit_tickets[b];            if (ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student) {                if (a.only_id.indexOf("djPassenger") > -1) {                    if ((aq[a.only_id.split("_")[1]].passenger_type) != ticket_submit_order.passenger_type.student) {                        c = "1";                        return c                    }                } else {                    if (a.only_id.indexOf("normalPassenger") > -1) {                        if ((a4[a.only_id.split("_")[1]].passenger_type) != ticket_submit_order.passenger_type.student) {                            c = "2";                            return c                        }                    } else {                        c = "0"                    }                }            }            if ($.trim(d.name) == "" && $.trim(d.id_no) == "" && $.trim(d.phone_no) == "") {                if (a.only_id.indexOf("djPassenger") > -1 && d.ticket_type == ticket_submit_order.ticket_type.student) {                    if ((aq[a.only_id.split("_")[1]].passenger_type) != ticket_submit_order.passenger_type.student) {                        c = "1";                        return c                    } else {                        limit_tickets[b] = a;                        c = "3"                    }                } else {                    if (a.only_id.indexOf("normalPassenger") > -1 && d.ticket_type == ticket_submit_order.ticket_type.student) {                        if ((a4[a.only_id.split("_")[1]].passenger_type) != ticket_submit_order.passenger_type.student) {                            c = "2";                            return c                        } else {                            limit_tickets[b] = a;                            c = "3"                        }                    } else {                        limit_tickets[b] = a;                        c = "3"                    }                }                break            }        }        return c    }    function bq(a) {        return a.replace(/(^\s*)|(\s*$)/g, "")    }    function a0(a) {        var b = limit_tickets.length;        for (var c = 0; c < limit_tickets.length; c++) {            var d = limit_tickets[c];            if (bq(d.name) == "" && bq(d.id_no) == "" && bq(d.phone_no) == "") {                b -= 1            }        }        return b    }    responseNormalPassengerClick = function (h) {        var d = "";        if ($(h).attr("id").split("_")[0] == "djPassenger") {            d = aI($(h).attr("id"))        } else {            if ($(h).attr("id").split("_")[0] == "normalPassenger") {                d = aQ($(h).attr("id"))            }        } if (h.checked) {            var e = a0(limit_tickets);            if (e >= init_limit_ticket_num) {                h.checked = false;                ax("提示", "最多只能购买" + init_limit_ticket_num + "张车票");                return            }            var a = a4[d.split("_")[1]];            var g = ar(a.passenger_type);            var c = new bm(d, "", "", g, "", a.passenger_name, a.passenger_id_type_code, a.passenger_id_type_name, a.passenger_id_no, a.mobile_no, "", ticketInfoForPassengerForm.tour_flag, true, a.passenger_type, false);            if (!aL(c)) {                ax("提示", "对不起，现登录用户证件类型不是一二代身份证，不能为证件类型为一二代身份证的乘车人 <span style='color:black;font-size:30px'><i>" + c.name + "</i></span> 代购车票");                h.checked = false;                return            }            var i = bg(c);            if (i == "0") {                limit_tickets.push(c)            } else {                if (i == "1") {                    ax("提示", "请从常用联系人中选择学生旅客");                    h.checked = false;                    return                } else {                    if (i == "2") {                        ax("提示", "请从常用联系人中选择学生旅客");                        h.checked = false;                        return                    }                }            } if (ticket_seat_codeMap[c.ticket_type].length < 1) {                ax("提示", "很抱歉，" + ticket_submit_order.ticket_type_name[c.ticket_type] + "余票不足！")            }            aA.push($(h).attr("id"));            $(h).next().removeClass().addClass("colorA");            if (a.passenger_type == "3") {                if (!IsStudentDate) {                    ax("提示", "学生票的乘车时间为每年的暑假6月1日至9月30日、寒假12月1日至3月31日，目前不办理学生票业务。")                }            }            renderTickInfo(limit_tickets, false)        } else {            $(h).next().removeClass();            for (var f = 0; f < aA.length; f++) {                if (aA[f] == $(h).attr("id")) {                    aA.splice(f, 1);                    break                }            }            for (var f = 0; f < limit_tickets.length; f++) {                var b = limit_tickets[f].only_id;                if (b == d) {                    limit_tickets.splice(f, 1);                    if (limit_tickets.length < 1) {                        ap("0")                    }                }            }            renderTickInfo(limit_tickets, false)        }    };    getpassengerTickets = function () {        var c = "";        for (var b = 0; b < limit_tickets.length; b++) {            var a = limit_tickets[b].seat_type + ",0," + limit_tickets[b].ticket_type + "," + limit_tickets[b].name + "," + limit_tickets[b].id_type + "," + limit_tickets[b].id_no + "," + (limit_tickets[b].phone_no == null ? "" : limit_tickets[b].phone_no) + "," + (limit_tickets[b].save_status == "" ? "N" : "Y");            c += a + "_"        }        return c.substring(0, c.length - 1)    };    getOldPassengers = function () {        var a = "";        for (var b = 0; b < limit_tickets.length; b++) {            var e = limit_tickets[b];            if (ticketInfoForPassengerForm.tour_flag == ticket_submit_order.tour_flag.fc || ticketInfoForPassengerForm.tour_flag == ticket_submit_order.tour_flag.gc) {                var d = e.name + "," + e.id_type + "," + e.id_no + "," + e.passenger_type;                a += d + "_"            } else {                if (e.only_id.indexOf("djPassenger_") > -1) {                    var c = e.only_id.split("_")[1];                    var d = aq[c].passenger_name + "," + aq[c].passenger_id_type_code + "," + aq[c].passenger_id_no + "," + aq[c].passenger_type;                    a += d + "_"                } else {                    if (e.only_id.indexOf("normalPassenger_") > -1) {                        var c = e.only_id.split("_")[1];                        var d = a4[c].passenger_name + "," + a4[c].passenger_id_type_code + "," + a4[c].passenger_id_no + "," + a4[c].passenger_type;                        a += d + "_"                    } else {                        a += "_ "                    }                }            }        }        return a    };    function bp(a) {        var b = "";        b = $("#djPassengerTemplate").html().replace("<!--", "").replace("-->", "");        $.templates({            leftTableTemplate: b        });        $("#dj_passenger_id").html($.render.leftTableTemplate(a));        clickCheckBoxName();        if (a != "" && a.length > 0) {            clickCheckBoxName();            av();            a7(true)        } else {            aU()        }    }    function a7(a) {        if (a) {            $("input[id^=djPassenger_]").change(function () {                responseDjPassengerClick(this)            })        } else {            $("input[id^=normalPassenger_]").change(function () {                responseNormalPassengerClick(this)            })        }    }    function aR(a) {        var b = "";        b = $("#normalPassengerTemplate").html().replace("<!--", "").replace("-->", "");        $.templates({            leftTableTemplate: b        });        $("#normal_passenger_id").html($.render.leftTableTemplate(a));        if (a != "" && a.length > 0) {            clickCheckBoxName();            a7(false)        }        aU()    }    renderTickInfo = function (a, b) {        upadateSavePassengerInfo();        var c = $("#ticketInfoTemplate").html().replace("<!--", "").replace("-->", "");        $.templates({            leftTableTemplate: c        });        a.IsStudentDate = IsStudentDate;        $("#ticketInfo_id").html($.render.leftTableTemplate(a));        aE();        updateAllCheckBox()    };    function aH() {        var a = $("select[id^=seatType_]");        $.each(a, function (b, c) {            $(c).width(function () {                var d = 0;                var e = $("#ticket_con_id span");                $.each(e, function (f, g) {                    if ($(g).width() > d) {                        d = $(g).width()                    }                });                return d - 20            })        })    }    renderCheckTickInfo = function (a) {        var b = $("#checkTicketInfoTemplate").html().replace("<!--", "").replace("-->", "");        $.templates({            leftTableTemplate: b        });        $("#check_ticketInfo_id").html($.render.leftTableTemplate(a))    };    function ao(a) {        var b = $("#ticketTitTemplate").html().replace("<!--", "").replace("-->", "");        $.templates({            leftTableTemplate: b        });        $("#check_ticket_tit_id").html($.render.leftTableTemplate(a))    }    function aX(a) {        var b = $("#ticketTitTemplate").html().replace("<!--", "").replace("-->", "");        $.templates({            leftTableTemplate: b        });        $("#ticket_tit_id").html($.render.leftTableTemplate(a))    }    function aS(a) {        var b = $("#ticketConTemplate").html().replace("<!--", "").replace("-->", "");        $.templates({            leftTableTemplate: b        });        $("#ticket_con_id").html($.render.leftTableTemplate(a))    }    function aK(a) {        var b = $("#oldTicketInfoForGcTemplate").html().replace("<!--", "").replace("-->", "");        $.templates({            leftTableTemplate: b        });        $("#oldTicketInfoForGc_id").html($.render.leftTableTemplate(a))    }    function ba(a) {        aK(a)    }    function aY() {        $.ajax({            type: "post",            url: ctx + "confirmPassenger/getPassengerDTOs",            async: true,            success: function (a) {                if (a.status) {                    if (a.data.isExist) {                        aq = a.data.dj_passengers;                        if (aq.length > 0) {                            bp(aq.length > a5 ? aq.slice(0, a5) : aq);                            aB()                        } else {                            bf()                        }                        a4 = a.data.normal_passengers;                        if (a4.length > 0) {                            aR(a4.length > a5 ? a4.slice(0, a5) : a4);                            a3();                            $("#show_more_passenger_id").show()                        } else {                            aN();                            $("#show_more_passenger_id").show()                        }                        renderTickInfo(limit_tickets, false)                    } else {                        if (a.data.exNoraml == "sysEx") {                            $("#show_more_passenger_id").hide();                            bf();                            aN()                        } else {                            $("#show_more_passenger_id").hide();                            bf();                            aN()                        }                    }                }                ableClickSubmitButtonOrPreStepBUtton()            },            error: function (c, a, b) {                ableClickSubmitButtonOrPreStepBUtton();                return            }        })    }    function a2() {        disableClickSubmitButtonOrPreStepBUtton()    }    ableClickSubmitButtonOrPreStepBUtton = function () {        var a = $("#submitOrder_id");        var b = $("#preStep_id");        b.bind("click", preStepClickEvent);        a.bind("click", submitOrderClickEvent);        a.removeClass("btn92").addClass("btn92s")    };    disableClickSubmitButtonOrPreStepBUtton = function () {        var a = $("#submitOrder_id");        var b = $("#preStep_id");        b.unbind("click");        a.unbind("click");        a.removeClass("btn92s").addClass("btn92")    };    function bf() {        $("#dg_passenger_image_id").hide()    }    function aB() {        $("#dg_passenger_image_id").show()    }    function aN() {        $("#normal_passenger_image_id").hide()    }    function a3() {        $("#normal_passenger_image_id").show()    }    function aO(h, f, a, k, g, i, b, e, c, l, j, d) {        this.train_date = aM(h);        this.start_time = bi(f);        this.station_train_code = a;        this.from_station = k;        this.to_station = g;        this.seat_type_name = i;        this.coach_name = b;        this.seat_name = e;        this.passenger_name = c;        this.id_type_name = l;        this.ticket_type_name = j;        this.ticket_price = Number(d / 100).toFixed(1)    }    function bm(n, f, e, b, d, j, h, i, a, m, o, g, l, c, k) {        this.only_id = n;        this.seat_type = f;        this.seat_type_name = e;        this.ticket_type = ay(c, h, b);        this.ticket_type_name = d;        this.name = j;        this.id_type = h;        this.id_type_name = i;        this.id_no = a;        this.phone_no = m;        this.passenger_type = c;        this.seatTypes = ticket_seat_codeMap[this.ticket_type == "" ? ticket_submit_order.ticket_type.adult : this.ticket_type];        this.ticketTypes = aJ;        this.cardTypes = init_cardTypes;        this.save_status = o;        this.tour_flag = g;        this.isDisabled = c == ticket_submit_order.ticket_type.student ? true : l;        this.isDefaultUsed = false;        this.checkboxStatus = k;        this.toString = function () {            return this.name + "_" + this.id_type + "_" + this.id_no + "_" + this.phone_no        }    }    function aI(a) {        for (var c = 0; c < aq.length; c++) {            var b = "djPassenger_" + aq[c].passenger_name + "_" + aq[c].passenger_id_type_code + "_" + aq[c].passenger_id_no + "_" + (aq[c].mobile_no == "" ? "null" : aq[c].mobile_no);            if (b == a) {                return "djPassenger_" + c            }        }    }    function aQ(a) {        for (var c = 0; c < a4.length; c++) {            var b = "normalPassenger_" + a4[c].passenger_name + "_" + a4[c].passenger_id_type_code + "_" + a4[c].passenger_id_no + "_" + (a4[c].mobile_no == "" ? "null" : a4[c].mobile_no);            if (b == a) {                return "normalPassenger_" + c            }        }    }    addPassengerInfo = function () {        if (limit_tickets.length >= init_limit_ticket_num) {            ax("提示", "最多只能购买" + init_limit_ticket_num + "张车票");            return        }        if (limit_tickets.length == 0) {            limit_tickets.push(new bm("sdAdd_" + a1(), "", "", ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student ? ticket_submit_order.ticket_type.student : "", "", "", "", "", "", "", "checked='checked'", ticketInfoForPassengerForm.tour_flag, ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student ? true : false, "", true))        }        var a = new bm("sdAdd_" + a1(), "", "", ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student ? ticket_submit_order.ticket_type.student : "", "", "", "", "", "", "", ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student ? "" : "checked='checked'", ticketInfoForPassengerForm.tour_flag, ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student ? true : false, "", ticketInfoForPassengerForm.purpose_codes == ticket_submit_order.ticket_query_flag.query_student ? false : true);        limit_tickets.push(a);        if (ticket_seat_codeMap[a.ticket_type].length < 1) {            ax("提示", "很抱歉，" + ticket_submit_order.ticket_type_name[a.ticket_type] + "余票不足！")        }        renderTickInfo(limit_tickets, false)    };    delPassengerInfo = function (f) {        if ($("span[id^='del_']").length < 2) {            $("#selected_ticket_passenger_all").prop("checked", false);            var d = $(f).attr("id");            var o = d.split("_")[1];            $("#passenger_name_" + o).val("");            $("#passenger_id_no_" + o).val("");            $("#phone_no_" + o).val("")        }        var l = $(f).attr("id");        if (l.indexOf("djPassenger") > -1) {            var e = l.split("_")[3];            var h = "djPassenger_" + aq[e].passenger_name + "_" + aq[e].passenger_id_type_code + "_" + aq[e].passenger_id_no + "_" + (aq[e].mobile_no == "" ? "null" : aq[e].mobile_no);            var j = $("#" + h);            var i = l.split("_")[2] + "_" + l.split("_")[3];            for (var g = 0; g < limit_tickets.length; g++) {                var a = limit_tickets[g].only_id;                if (a == i) {                    limit_tickets.splice(g, 1);                    if (limit_tickets.length < 1) {                        ap("0")                    }                    break                }            }            for (var g = 0; g < bc.length; g++) {                if (bc[g] == h) {                    bc.splice(g, 1);                    break                }            }            if (j.attr("id") != undefined && j.attr("id") != "undefined" && j.attr("id") != null && j.attr("id") != "") {                j.prop("checked", false);                j.next().removeClass()            }            renderTickInfo(limit_tickets, false)        } else {            if (l.indexOf("normalPassenger") > -1) {                var c = l.split("_")[3];                var h = "normalPassenger_" + a4[c].passenger_name + "_" + a4[c].passenger_id_type_code + "_" + a4[c].passenger_id_no + "_" + (a4[c].mobile_no == "" ? "null" : a4[c].mobile_no);                var m = $("#" + h);                var i = l.split("_")[2] + "_" + l.split("_")[3];                for (var g = 0; g < limit_tickets.length; g++) {                    var a = limit_tickets[g].only_id;                    if (a == i) {                        limit_tickets.splice(g, 1);                        if (limit_tickets.length < 1) {                            ap("0")                        }                        break                    }                }                for (var g = 0; g < aA.length; g++) {                    if (aA[g] == h) {                        aA.splice(g, 1);                        break                    }                }                if (m.attr("id") != undefined && m.attr("id") != "undefined" && m.attr("id") != null && m.attr("id") != "") {                    m.prop("checked", false);                    m.next().removeClass()                }                renderTickInfo(limit_tickets, false)            } else {                if (l.indexOf("sdAdd") > -1) {                    var i = l.split("_")[2] + "_" + l.split("_")[3];                    for (var g = 0; g < limit_tickets.length; g++) {                        var a = limit_tickets[g].only_id;                        if (a == i) {                            limit_tickets.splice(g, 1);                            if (limit_tickets.length < 1) {                                ap("0")                            }                            break                        }                    }                    renderTickInfo(limit_tickets, false)                } else {                    if (l.indexOf("default") > -1) {                        var i = l.split("_")[2] + "_" + l.split("_")[3];                        for (var g = 0; g < limit_tickets.length; g++) {                            var a = limit_tickets[g].only_id;                            if (a == i) {                                limit_tickets.splice(g, 1);                                if (limit_tickets.length < 1) {                                    var k = $("input[id*=_default_]");                                    if (k == undefined || k == "undefined" || k == null || k.length == 0) {                                        ap(0)                                    } else {                                        var b = $(k[k.length - 1]).attr("id");                                        var n = b.split("_");                                        ap(Number(n[n.length - 1]) + 1)                                    }                                }                                break                            }                        }                        renderTickInfo(limit_tickets, false)                    }                }            }        }    };    upadateSavePassengerInfo = function () {        var d = $("span[id^='del_']");        for (var b = 0; b < d.length; b++) {            var f = $(d[b]).attr("id");            for (var e = 0; e < limit_tickets.length; e++) {                var a = limit_tickets[e];                if (a.only_id == (f.split("_")[2] + "_" + f.split("_")[3])) {                    var c = f.split("_")[1];                    limit_tickets[e].seat_type = $("#seatType_" + c).val();                    limit_tickets[e].seat_type_name = $("#seatType_" + c + " option:selected").text();                    limit_tickets[e].ticket_type = $("#ticketType_" + c).val();                    limit_tickets[e].seatTypes = ticket_seat_codeMap[limit_tickets[e].ticket_type == "" ? ticket_submit_order.ticket_type.adult : limit_tickets[e].ticket_type];                    limit_tickets[e].ticket_type_name = $("#ticketType_" + c + " option:selected").text();                    limit_tickets[e].name = $("#passenger_name_" + c).val();                    limit_tickets[e].id_type = $("#passenger_id_type_" + c).val();                    limit_tickets[e].id_type_name = $("#passenger_id_type_" + c + " option:selected").text();                    limit_tickets[e].id_no = $("#passenger_id_no_" + c).val();                    limit_tickets[e].phone_no = $("#phone_no_" + c).val();                    limit_tickets[e].save_status = $("#save_" + c).prop("checked") ? "checked='checked'" : "";                    if (limit_tickets[e].tour_flag == ticket_submit_order.tour_flag.dc || limit_tickets[e].tour_flag == ticket_submit_order.tour_flag.wc) {                        limit_tickets[e].isDisabled = ($("#ticketType_" + c).val() == ticket_submit_order.ticket_type.student) || (!limit_tickets[e].checkboxStatus) ? true : false                    }                    break                }            }        }    };    selectedTicketPassengerAll = function (a, c) {        if (a.checked) {            for (var b = 0; b < limit_tickets.length; b++) {                limit_tickets[b].save_status = "checked='checked'";                if (!$("#save_" + (b + 1)).prop("disabled")) {                    $("#save_" + (b + 1)).prop("checked", true)                }            }        } else {            if (c) {                for (var b = 0; b < limit_tickets.length; b++) {                    limit_tickets[b].save_status = "";                    if (!$("#save_" + (b + 1)).prop("disabled")) {                        $("#save_" + (b + 1)).prop("checked", false)                    }                }            }        }    };    doTicketTitleShow = function (j) {        var f = new Array();        var c = ticketInfoForPassengerForm.queryLeftNewDetailDTO;        var b = ticketInfoForPassengerForm.queryLeftTicketRequestDTO;        var g = b.train_date.substr(0, 4) + "-" + b.train_date.substr(4, 2) + "-" + b.train_date.substr(6, 2);        var i = bd(new Date(Date.parse(g.replace(/-/g, "/"))));        var a = function (o, q, p, m, r, n, k, l) {            this.date = o;            this.week = q;            this.station_train_code = p;            this.train_headers = m;            this.from_station = r;            this.start_time = n;            this.to_station = k;            this.arrive_time = l        };        var h = c.start_time.substr(0, 2) + ":" + c.start_time.substr(2, 2);        var d = c.arrive_time.substr(0, 2) + ":" + c.arrive_time.substr(2, 2);        var e = new a(g, i, c.station_train_code, b.train_headers, c.from_station_name, h, c.to_station_name, d);        f.push(e);        if (!j) {            aX(f)        } else {            if (j) {                ao(f)            }        }    };    function bk() {        aS(getSeatTypePrices())    }    function bd(d) {        var a = ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"];        var b = 0;        for (var c = 0; c < a.length; c++) {            if (d.toString().indexOf(a[c]) > -1) {                b = c + 1;                break            }        }        var e = "";        switch (b) {        case 1:            e = "周一";            break;        case 2:            e = "周二";            break;        case 3:            e = "周三";            break;        case 4:            e = "周四";            break;        case 5:            e = "周五";            break;        case 6:            e = "周六";            break;        case 7:            e = "周日";            break        }        return e    }    function an(b) {        var c = "";        for (var a = 0; a < init_cardTypes.length; a++) {            if (init_cardTypes[a].value == b) {                c = init_cardTypes[a].id;                break            }        }        return c    }    function bi(b) {        var c = b.getHours() < 10 ? ("0" + b.getHours()) : b.getHours();        var a = b.getMinutes() < 10 ? ("0" + b.getMinutes()) : b.getMinutes();        return c + ":" + a    }    function aM(b) {        var c = b.getFullYear();        var a = (b.getMonth() + 1) < 10 ? ("0" + (b.getMonth() + 1)) : (b.getMonth() + 1);        var d = b.getDate() < 10 ? ("0" + b.getDate()) : b.getDate();        return c + "-" + a + "-" + d    }    function aW(a) {        return;        var e = $(a).attr("id");        var b = $("#" + e).val();        if (e.indexOf("passenger_name_") > -1) {            var c = e.split("_")[2];            var d = $("#passenger_id_type_" + c).val();            if ($.trim(b) != "") {                if (d == ticket_submit_order.passenger_card_type.two || d == ticket_submit_order.passenger_card_type.one) {                    if (!/^[a-zA-Z·.．\u4E00-\u9FA5]+$/.test(b)) {                        $("#tr_id_" + c + "_check").show();                        $("#" + e + "_check").show();                        $("#" + e + "_check").html("非法的乘车人姓名")                    } else {                        $("#" + e + "_check").hide();                        a9(c)                    }                } else {                    if (!/^[a-z A-Z·.．\u4E00-\u9FA5]+$/.test(b)) {                        $("#tr_id_" + c + "_check").show();                        $("#" + e + "_check").show();                        $("#" + e + "_check").html("非法的乘车人姓名")                    } else {                        $("#" + e + "_check").hide();                        a9(c)                    }                }            } else {                $("#tr_id_" + c + "_check").show();                $("#" + e + "_check").show();                $("#" + e + "_check").html("请输入乘车人姓名")            }        } else {            if (e.indexOf("passenger_id_no_") > -1) {                var c = e.split("_")[3];                var f = $("#passenger_id_type_" + c).val();                if (f == ticket_submit_order.passenger_card_type.two) {                    if ($.trim(b) != "") {                        if (!validateSecIdCard(b)) {                            $("#tr_id_" + c + "_check").show();                            $("#" + e + "_check").show();                            $("#" + e + "_check").html("非法的二代身份证号码")                        } else {                            $("#" + e + "_check").hide();                            a9(c)                        }                    } else {                        $("#tr_id_" + c + "_check").show();                        $("#" + e + "_check").show();                        $("#" + e + "_check").html("请输入证件号码")                    }                } else {                    if (f == ticket_submit_order.passenger_card_type.one) {                        if ($.trim(b) != "") {                            if (!validateFirIdCard(b)) {                                $("#tr_id_" + c + "_check").show();                                $("#" + e + "_check").show();                                $("#" + e + "_check").html("非法的一代身份证号码")                            } else {                                $("#" + e + "_check").hide();                                a9(c)                            }                        } else {                            $("#tr_id_" + c + "_check").show();                            $("#" + e + "_check").show();                            $("#" + e + "_check").html("请输入证件号码")                        }                    } else {                        if (f == ticket_submit_order.passenger_card_type.passport) {                            if ($.trim(b) != "") {                                if ((!/^[a-zA-Z0-9]{5,17}$/.test(b)) || (/^[a-zA-Z]*$/.test(b))) {                                    $("#tr_id_" + c + "_check").show();                                    $("#" + e + "_check").show();                                    $("#" + e + "_check").html("非法的护照号码")                                } else {                                    $("#" + e + "_check").hide();                                    a9(c)                                }                            } else {                                $("#tr_id_" + c + "_check").show();                                $("#" + e + "_check").show();                                $("#" + e + "_check").html("请输入证件号码")                            }                        } else {                            if (f == ticket_submit_order.passenger_card_type.hongkong_macau) {                                if ($.trim(b) != "") {                                    if (!/^[HMhm]{1}[0-9]{10}$/.test(b) && !/^[HMhm]{1}[0-9]{8}$/.test(b)) {                                        $("#tr_id_" + c + "_check").show();                                        $("#" + e + "_check").show();                                        $("#" + e + "_check").html("非法的港澳通行证号码")                                    } else {                                        $("#" + e + "_check").hide();                                        a9(c)                                    }                                } else {                                    $("#tr_id_" + c + "_check").show();                                    $("#" + e + "_check").show();                                    $("#" + e + "_check").html("请输入证件号码")                                }                            } else {                                if (f == ticket_submit_order.passenger_card_type.taiwan) {                                    if ($.trim(b) != "") {                                        if (!/^[0-9]{8}$/.test(b) && !/^[0-9]{10}$/.test(b)) {                                            $("#tr_id_" + c + "_check").show();                                            $("#" + e + "_check").show();                                            $("#" + e + "_check").html("非法的台湾通行证号码")                                        } else {                                            $("#" + e + "_check").hide();                                            a9(c)                                        }                                    } else {                                        $("#tr_id_" + c + "_check").show();                                        $("#" + e + "_check").show();                                        $("#" + e + "_check").html("请输入证件号码")                                    }                                }                            }                        }                    }                }            } else {                if (e.indexOf("phone_no_") > -1) {                    var c = e.split("_")[2];                    if (b != "") {                        if (!/^[0-9]{11}$/.test(b)) {                            $("#tr_id_" + c + "_check").show();                            $("#" + e + "_check").show();                            $("#" + e + "_check").html("非法的手机号码")                        } else {                            $("#" + e + "_check").hide();                            a9(c)                        }                    }                } else {                    if (e.indexOf("seatType_") > -1) {                        var c = e.split("_")[1];                        if ($("#" + e).val() == null || $("#" + e).val() == "") {                            $("#tr_id_" + c + "_check").show();                            $("#" + e + "_check").show();                            $("#" + e + "_check").html(ticket_submit_order.ticket_type_name[$("#ticketType_" + c).val()] + "余票不足!")                        } else {                            $("#" + e + "_check").hide();                            a9(c)                        }                    }                }            }        }    }    function a9(a) {        return        if (at(a)) {            $("#tr_id_" + a + "_check").hide()        }    }    function at(a) {        if ($("#seatType_" + a + "_check").css("display") == "block" || $("#seatType_" + a + "_check").css("display") == "inline" || $("#passenger_name_" + a + "_check").css("display") == "block" || $("#passenger_name_" + a + "_check").css("display") == "inline" || $("#passenger_id_no_" + a + "_check").css("display") == "block" || $("#passenger_id_no_" + a + "_check").css("display") == "inline" || $("#phone_no_" + a + "_check").css("display") == "block" || $("#phone_no_" + a + "_check").css("display") == "inline") {            return false        } else {            return true        }    }    stepFirValidatorTicketInfo = function (a) {        var c = "";                if (!a) {            c = $("input[id^='passenger_name_']");            for (var b = 0; b < c.length; b++) {                aW(c[b])            }            c = $("input[id^='passenger_id_no_']");            for (var b = 0; b < c.length; b++) {                aW(c[b])            }            c = $("input[id^='phone_no_']");            for (var b = 0; b < c.length; b++) {                aW(c[b])            }            c = $("select[id^='seatType_']");            for (var b = 0; b < c.length; b++) {                aW(c[b])            }        } else {            c = $("select[id^='seatType_']");            for (var b = 0; b < c.length; b++) {                aW(c[b])            }        }    };    elemOnkeyupNotice = function (a) {        var c = bn(a).split(",");        var d = c[0];        var e = c[1];        var f = c[2];        var b = c[3];        var g = (Number($(a).css("width").replace("px", "")) - 15);        if (Number(d) >= Number(e) && Number(d) > g && $.trim(b) != "") {            $("#" + f + "_notice").css("width", d + "px")        } else {            if (Number(d) < Number(e) && Number(e) > g && Number(d) > g && $.trim(b) != "") {                $("#" + f + "_notice").css("width", d + "px")            } else {                $("#" + f + "_notice").css("width", g + "px")            }        }        $("#" + f + "_notice").html(b)    };    function bn(g) {        var d = "";        var j = $(g).attr("id");        var c = $(g).val();        var b = "";        var a = $("#passenger_id_type_" + j.substr(Number(j.lastIndexOf("_")) + 1)).val();        var i = $("#" + j + "_notice").css("width").replace("px", "");        var f = 0;        var e = 10;        for (var h = 0; h < c.length; h++) {            b += c.charAt(h);            if (j.indexOf("passenger_id_no_") > -1 && (a == ticket_submit_order.passenger_card_type.two || a == ticket_submit_order.passenger_card_type.one)) {                if (h == 5 || h == 13) {                    b += " "                }            } else {                if (j.indexOf("phone_no_") > -1) {                    if (h == 2 || h == 6) {                        b += " "                    }                }            }        }        for (var h = 0; h < c.length; h++) {            if (/^[\u4E00-\u9FA5]+/.test(c.charAt(h))) {                f += 1 * 10;                e = 15            }            if (/^[0-9]+/.test(c.charAt(h))) {                f += 1 * 12;                e = 20            } else {                f += 1 * 12            }        }        f += e;        d = f + "," + i + "," + j + "," + b;        return d    }    updateAllCheckBox = function () {        var a = $("input[id^='save_']");        for (var b = 0; b < a.length; b++) {            if (!$(a[b]).prop("checked")) {                $("#selected_ticket_passenger_all").prop("checked", false);                return            }        }        $("#selected_ticket_passenger_all").prop("checked", true)    };    updateSeatTypeByeTickeType = function (b) {        var d = $(b).prop("id").split("_")[1];        var a = ticket_seat_codeMap[$(b).val()];        var f = $("span[id^=del_" + d + "]").attr("id");        var c = $("#seatType_" + d);        if ($(b).val() == ticket_submit_order.ticket_type.student) {            au(d, true);            $("#passenger_id_type_" + d).css("color", "#999999");            $("#save_" + d).next().removeClass("i-save").addClass("i-save i-save-dis");            bb(d);            if (IsStudentDate) {                ax("提示", "请从常用联系人中选择学生旅客")            } else {                ax("提示", "学生票的乘车时间为每年的暑假6月1日至9月30日、寒假12月1日至3月31日，目前不办理学生票业务。");                $(b).find("option").first().attr("selected", "selected")            }        } else {            if (!(f.indexOf("djPassenger_") > -1 || f.indexOf("normalPassenger_") > -1)) {                $("#passenger_id_type_" + d).removeAttr("style");                $("#save_" + d).next().removeClass("i-save i-save-dis").addClass("i-save");                bo($(b).val(), d);                au(d, false)            }        }        selectedTicketPassengerAll(document.getElementById("selected_ticket_passenger_all"), false);        if (!(f.indexOf("djPassenger_") > -1 || f.indexOf("normalPassenger_") > -1)) {            be(b)        }        c.empty();        for (var e = 0; e < a.length; e++) {            c.append("<option value='" + a[e].id + "'>" + a[e].value + "（￥" + getSeatTypePriceForSeatName(a[e].value) + "）</option>")        }    };    function bo(e, c) {        var a = $("span[id^=del_" + c + "]").attr("id");        var d = a.split("_")[2] + "_" + a.split("_")[3];        for (var b = 0; b < limit_tickets.length; b++) {            var f = limit_tickets[b];            if (f.only_id == d) {                if (f.name == "" && f.phone_no == "" && f.id_no == "") {                    limit_tickets[b].ticket_type = e;                    break                }            }        }    }    function bb(f) {        var e = $("span[id^=del_" + f + "]").attr("id");        if (undefined != e && "undefined" != e && "" != e) {            var c = e.split("_")[2] + "_" + e.split("_")[3];            $("#passenger_name_" + f).val("");            $("#passenger_id_no_" + f).val("");            $("#phone_no_" + f).val("");            for (var h = 0; h < limit_tickets.length; h++) {                var b = limit_tickets[h];                if (b.only_id == c) {                    var j = a1();                    var d = new bm("sdAdd_" + j, "", "", ticket_submit_order.ticket_type.student, "", "", "", "", "", "", "", ticketInfoForPassengerForm.tour_flag, true, "", true);                    limit_tickets[h] = d;                    $("span[id^=del_" + f + "]").attr("id", "del_" + e.split("_")[1] + "_sdAdd_" + j);                    break                }            }            if (c.indexOf("djPassenger") > -1) {                var i = aq[c.split("_")[1]];                var k = "djPassenger_" + i.passenger_name + "_" + i.passenger_id_type_code + "_" + i.passenger_id_no + "_" + (i.mobile_no == "" ? "null" : i.mobile_no);                $("#" + k).prop("checked", false);                $("#" + k).next().removeClass();                for (var h = 0; h < bc.length; h++) {                    var g = bc[h];                    if (g == k) {                        bc.splice(h, 1);                        break                    }                }            } else {                if (c.indexOf("normalPassenger") > -1) {                    var l = a4[c.split("_")[1]];                    var k = "normalPassenger_" + l.passenger_name + "_" + l.passenger_id_type_code + "_" + l.passenger_id_no + "_" + (l.mobile_no == "" ? "null" : l.mobile_no);                    $("#" + k).prop("checked", false);                    $("#" + k).next().removeClass();                    for (var h = 0; h < aA.length; h++) {                        var a = aA[h];                        if (a == k) {                            aA.splice(h, 1);                            break                        }                    }                }            }        }    }    function bj(b) {        var d = b.name + "_" + b.id_type + "_" + b.id_no;        for (var c = 0; c < a4.length; c++) {            var a = a4[c].passenger_name + "_" + a4[c].passenger_id_type_code + "_" + a4[c].passenger_id_no;            if (d == a) {                return a4[c]            }        }        return ""    }    function au(b, a) {        $("#passenger_name_" + b).prop("readonly", a);        $("#passenger_name_" + b).prop("disabled", a);        $("#passenger_id_type_" + b).prop("disabled", a);        $("#passenger_id_no_" + b).prop("readonly", a);        $("#phone_no_" + b).prop("readonly", a);        $("#passenger_id_no_" + b).prop("disabled", a);        $("#phone_no_" + b).prop("disabled", a);        $("#save_" + b).prop("disabled", a);        $("#save_" + b).prop("checked", !a)    }    function be(a) {        var f = $(a).attr("id").split("_")[1];        var d = $("#passenger_id_type_" + f);        var e = d.val();        d.empty();        if ($(a).val() == ticket_submit_order.ticket_type.disability) {            var b = false;            for (var c = 0; c < init_cardTypes.length; c++) {                if (init_cardTypes[c].id == ticket_submit_order.passenger_card_type.two) {                    d.append("<option value='" + init_cardTypes[c].id + "' " + (init_cardTypes[c].id == e ? "selected='selected'" : "") + ">" + init_cardTypes[c].value + "</option>");                    b = true                }            }            if (!b) {                ax("提示", "对不起，您填写的乘车人 <span style='color:black;font-size:30px'><i>" + $("#passenger_name_" + f).val() + "</i></span> 不能购买残军票！");                for (var c = 0; c < init_cardTypes.length; c++) {                    d.append("<option value='" + init_cardTypes[c].id + "'" + (init_cardTypes[c].id == e ? "selected='selected'" : "") + ">" + init_cardTypes[c].value + "</option>")                }            }        } else {            for (var c = 0; c < init_cardTypes.length; c++) {                d.append("<option value='" + init_cardTypes[c].id + "'" + (init_cardTypes[c].id == e ? "selected='selected'" : "") + ">" + init_cardTypes[c].value + "</option>")            }        }    }    getSeatTypePriceForSeatName = function (d) {        var a = 0;        var b = getSeatTypePrices();        for (var c = 0; c < b.length; c++) {            if (b[c].seat_type_name == d) {                a = b[c].ticket_price;                break            }        }        return a    };    getSeatTypePrices = function () {        var b = function (g, h, i) {            this.seat_type_name = g;            this.ticket_price = h == Number(0) ? "" : h;            this.ticket_statu = i;            this.wp_statu = i == "无票" ? true : false        };        var a = new Array();        var d = ticketInfoForPassengerForm.leftDetails;        for (var c = 0; c < d.length; c++) {            var e = d[c].split(/[(,)]/);            var f = new b(e[0], Number(e[1].replace("元", "") == "--" ? 0 : e[1].replace("元", "")).toFixed(1), e[2]);            a.push(f)        }        a = a.sort(function (g, h) {            if (Number(g.ticket_price) < Number(h.ticket_price)) {                return 1            } else {                if (Number(g.ticket_price) == Number(h.ticket_price)) {                    return 0                } else {                    return -1                }            }        });        return a    };    getI18nResourceValueBykeyForJs = function (a) {        return submitorder_messages[a]    };    getSuitNameByFlag = function (d, a) {        var e = 0;        var b = 0;        var f = 0;        for (var c = 0; c < d.length; c++) {            if (/^[\u4E00-\u9FA5]+/.test(d.charAt(c))) {                e += 2;                if (c < 3) {                    f += 1                }            } else {                e += 1            } if (e <= 12) {                b += 1            }        }        if (a) {            e += 6;            if (e > 12) {                return d.substr(0, f == 3 ? 3 : 4) + "...(学生)"            } else {                return d + "(学生)"            }        } else {            if (e > 12) {                return d.substr(0, 5) + "..."            } else {                return d            }        }        return ""    };    function bl() {        $("#jfzfNoticeId").hide()    }    function bh() {        $("#jfzfNoticeId").show()    }    function ax(a, b) {        alertWarningMsgByTit_header(a, b)    }})();function OrderQueueWaitTime(e, f, d) {    this.tourFlag = e;    this.waitMethod = f;    this.finishMethod = d;    this.dispTime = 1;    this.nextRequestTime = 1;    this.isFinished = false;    this.waitObj}OrderQueueWaitTime.prototype.start = function () {    var b = this;    b.timerJob();    window.setInterval(function () {        b.timerJob()    }, 1000)};OrderQueueWaitTime.prototype.timerJob = function () {    if (this.isFinished) {        return    }    if (this.dispTime <= 0) {        this.isFinished = true;        this.finishMethod(this.tourFlag, this.dispTime, this.waitObj);        return    }    if (this.dispTime == this.nextRequestTime) {        this.getWaitTime()    }    var e = this.dispTime;    var f = "";    var d = parseInt(e / 60);    if (d >= 1) {        f = d + "分";        e = e % 60    } else {        f = "1分"    }    this.waitMethod(this.tourFlag, this.dispTime > 1 ? --this.dispTime : 1, f)};OrderQueueWaitTime.prototype.getWaitTime = function () {    var b = this;    $.ajax({        url: ctx + "confirmPassenger/queryOrderWaitTime?random=" + new Date().getTime(),        type: "GET",        data: {            tourFlag: b.tourFlag        },        dataType: "json",        success: function (h) {            var f = h.data;            if (!f.queryOrderWaitTimeStatus) {                window.location.href = ctx + "login/init?random=" + new Date().getTime()            } else {                if (f != null) {                    b.waitObj = f;                    b.dispTime = f.waitTime;                    var g = parseInt(f.waitTime / 1.5);                    g = g > 60 ? 60 : g;                    var a = f.waitTime - g;                    b.nextRequestTime = a <= 0 ? 1 : a                }            }        },        error: function (a, e, f) {            return false        }    })};jQuery.validator.addMethod("checkLoginUserName", function (h, j) {    var g = false;    var f = /^[A-Za-z]{1}([A-Za-z0-9]|[_]){0,29}$/;    var i = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i;    if (f.test(h) || i.test(h)) {        g = true    }    return this.optional(j) || g}, "wrong username.");jQuery.validator.addMethod("requiredUserName", function (c, d) {    if ("用户名／邮箱" == c) {        return false    }    if (c == null || "" == c) {        return false    }    return true}, "wrong username.");jQuery.validator.addMethod("requiredSchoolName", function (c, d) {    if ("简码／汉字" == c) {        return false    }    if (c == null || "" == c) {        return false    }    return true}, "wrong schoolname.");jQuery.validator.addMethod("randCodeRequired", function (c, d) {    $("#i-ok").css("display", "none");    return c.length > 0}, "验证码错误!");jQuery.validator.addMethod("randCodeFormat", function (f, d) {    $("#i-ok").css("display", "none");    var e = /^[a-zA-Z0-9]+$/;    return this.optional(d) || e.test(f)}, "验证码错误!");jQuery.validator.addMethod("randCodeLength", function (c, d) {    $("#i-ok").css("display", "none");    return c.length == 4}, "验证码错误!.");jQuery.validator.addMethod("integrationCheck", function (d, e) {    var f = /^\d{6}$/;    return this.optional(e) || f.test(d)}, "wrong integrationpassword");jQuery.validator.addMethod("integrationPwdCheck", function (d, e, f) {    if ($("#" + f[0]).val() == $("#" + f[1]).val()) {        return true    }    return false}, "两次输入密码不一致!.");jQuery.validator.addMethod("checkRandCode", function (h, e, g) {    var f = true;    if (h && h.length == 4) {        $.ajax({            url: ctx + "passcodeNew/checkRandCodeAnsyn",            type: "post",            data: {                randCode: h,                rand: g            },            async: false,            success: function (a) {                if (a.data == "N") {                    f = false;                    $("#i-ok").css("display", "none")                } else {                    f = true;                    $("#i-ok").css("display", "block")                }            }        })    } else {        f = false;        $("#i-ok").css("display", "none")    }    return f}, "验证码错误!.");jQuery.validator.addMethod("validateUsersName", function (c, d) {    return this.optional(d) || /^[A-Za-z]{1}([A-Za-z0-9]|[_]){0,29}$/.test(c)}, "用户名只能由字母、数字或_组成");jQuery.validator.addMethod("checkWriteSpace", function (f, d) {    for (var e = 0; e < f.length; e++) {        if (f.charCodeAt(e) == 32) {            return false        }    }    return true}, "contain writespace");jQuery.validator.addMethod("validateRandCode", function (c, d) {    return this.optional(d) || /^[a-zA-Z0-9]+$/.test(c)}, "验证码错误!.");jQuery.validator.addMethod("checkPassward", function (j, f, h) {    var i = true;    for (var g = 0; g < j.length; g++) {        if (j.charCodeAt(g) == 39 || j.charCodeAt(g) == 60 || j.charCodeAt(g) == 62) {            i = false        }        if (!i) {            break        }    }    return this.optional(f) || i}, "Passward wrong");function validateSecIdCard(k) {    var l = 0;    var i = k;    var m = {        11: "北京",        12: "天津",        13: "河北",        14: "山西",        15: "内蒙",        21: "辽宁",        22: "吉林",        23: "黑龙",        31: "上海",        32: "江苏",        33: "浙江",        34: "安徽",        35: "福建",        36: "江西",        37: "山东",        41: "河南",        42: "湖北",        43: "湖南",        44: "广东",        45: "广西",        46: "海南",        50: "重庆",        51: "四川",        52: "贵州",        53: "云南",        54: "西藏",        61: "陕西",        62: "甘肃",        63: "青海",        64: "宁夏",        65: "新疆",        71: "台湾",        81: "香港",        82: "澳门",        91: "国外"    };    if (!/^\d{17}(\d|x)$/i.test(i)) {        return false    }    i = i.replace(/x$/i, "a");    if (m[parseInt(i.substr(0, 2))] == null) {        return false    }    var n = i.substr(6, 4) + "-" + Number(i.substr(10, 2)) + "-" + Number(i.substr(12, 2));    var j = new Date(n.replace(/-/g, "/"));    if (n != (j.getFullYear() + "-" + (j.getMonth() + 1) + "-" + j.getDate())) {        return false    }    for (var d = 17; d >= 0; d--) {        l += (Math.pow(2, d) % 11) * parseInt(i.charAt(17 - d), 11)    }    if (l % 11 != 1) {        return false    }    return true}function validateFirIdCard(k) {    var l = 0;    var i;    var m = {        11: "北京",        12: "天津",        13: "河北",        14: "山西",        15: "内蒙",        21: "辽宁",        22: "吉林",        23: "黑龙",        31: "上海",        32: "江苏",        33: "浙江",        34: "安徽",        35: "福建",        36: "江西",        37: "山东",        41: "河南",        42: "湖北",        43: "湖南",        44: "广东",        45: "广西",        46: "海南",        50: "重庆",        51: "四川",        52: "贵州",        53: "云南",        54: "西藏",        61: "陕西",        62: "甘肃",        63: "青海",        64: "宁夏",        65: "新疆",        71: "台湾",        81: "香港",        82: "澳门",        91: "国外"    };    if (k.length == 15) {        i = idCardUpdate(k)    } else {        i = k    } if (!/^\d{17}(\d|x)$/i.test(i)) {        return false    }    i = i.replace(/x$/i, "a");    if (m[parseInt(i.substr(0, 2))] == null) {        return false    }    var n = i.substr(6, 4) + "-" + Number(i.substr(10, 2)) + "-" + Number(i.substr(12, 2));    var j = new Date(n.replace(/-/g, "/"));    if (n != (j.getFullYear() + "-" + (j.getMonth() + 1) + "-" + j.getDate())) {        return false    }    for (var d = 17; d >= 0; d--) {        l += (Math.pow(2, d) % 11) * parseInt(i.charAt(17 - d), 11)    }    if (l % 11 != 1) {        return false    }    return true}function idCardUpdate(j) {    var h;    var k = /^(\d){15}$/;    if (k.test(j)) {        var l = 0;        var i = new Array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2);        var m = new Array("1", "0", "X", "9", "8", "7", "6", "5", "4", "3", "2");        j = j.substr(0, 6) + "19" + j.substr(6, j.length - 6);        for (var n = 0; n < j.length; n++) {            l += parseInt(j.substr(n, 1)) * i[n]        }        j += m[l % 11];        h = j    } else {        h = "#"    }    return h}jQuery.validator.addMethod("checkBorth", function (i, j) {    var d = i;    if (d == "") {        return true    } else {        var g = d.match(/^(\d{1,4})(-|\/)(\d{1,2})\2(\d{1,2})$/);        if (g == null) {            return false        }        var h = new Date(g[1], g[3] - 1, g[4]);        return (h.getFullYear() == g[1] && (h.getMonth() + 1) == g[3] && h.getDate() == g[4])    }}, "日期格式不合法");jQuery.validator.addMethod("byteRangeLength", function (i, f, h) {    var j = i.length;    for (var g = 0; g < i.length; g++) {        if (i.charCodeAt(g) > 127) {            j++        }    }    return this.optional(f) || (j >= h[0] && j <= h[1])}, "length wrong");jQuery.validator.addMethod("checkNameCharBlank", function (h, e, g) {    var f = g.split("@");    if ($("#" + f[1]).val() == "") {        return true    } else {        if ($("#" + f[0]).val() == "1" || $("#" + f[0]).val() == "2") {            return this.optional(e) || /^[a-zA-Z·.．\u4E00-\u9FA5]+$/.test(h)        } else {            return this.optional(e) || /^[a-z A-Z·.．\u4E00-\u9FA5]+$/.test(h)        }    }}, "wrong name.");jQuery.validator.addMethod("checkIdValidStr", function (f, d) {    var e = /^[a-zA-Z0-9\_\-\(\)]+$/;    return this.optional(d) || (e.test(f))}, "wrong id");jQuery.validator.addMethod("isSecIDCard", function (d, e, f) {    if (!checkIfSecIdCard($(f).val())) {        return true    }    return validateSecIdCard(d)}, "wrong");function checkIfSecIdCard(b) {    if (b == "1") {        return true    }    return false}function checkIfFirIdCard(b) {    if (b == "2") {        return true    }    return false}function checkCardForHKorTW(b) {    if (b == "C" || b == "G") {        return true    }    return false}jQuery.validator.addMethod("isFirIDCard", function (d, e, f) {    if (!checkIfFirIdCard($(f).val())) {        return true    }    return validateFirIdCard(d)}, "wrong");jQuery.validator.addMethod("checkHkongMacao", function (h, e, g) {    if ($(g).val() == "C") {        var f = /^[HMhm]{1}([0-9]{10}|[0-9]{8})$/;        return this.optional(e) || (f.test(h))    } else {        return true    }}, "wrong format.");jQuery.validator.addMethod("checkTaiw", function (j, g, h) {    if ($(h).val() == "G") {        var i = /^[0-9]{8}$/;        var f = /^[0-9]{10}$/;        return this.optional(g) || (i.test(j)) || (f.test(j))    } else {        return true    }}, "wrong format.");jQuery.validator.addMethod("checkPassport", function (i, f, h) {    if ($(h).val() == "B") {        var j = /^[a-zA-Z]*$/;        if (j.test(i)) {            return false        }        var g = /^[a-zA-Z0-9]{5,17}$/;        return this.optional(f) || (g.test(i))    } else {        return true    }}, "wrong format.");jQuery.validator.addMethod("isMobile", function (f, e) {    var d = f.length;    return this.optional(e) || (d == 11 && /^[0-9]+$/.test(f))}, "wrong mobile phone ");jQuery.validator.addMethod("isTelePhone", function (d, e) {    var f = /(^[0-9]{3,4}\-[0-9]{3,8}$)|(^[0-9]{3,8}$)|(^[0-9]{3,4}\)[0-9]{3,8}$)|(^0{0,1}13[0-9]{9}#)/;    return this.optional(e) || (f.test(d))}, "wrong telePhone ");jQuery.validator.addMethod("illegalChar", function (j, f, h) {    var i = true;    for (var g = 0; g < j.length; g++) {        if (j.charCodeAt(g) == 39 || j.charCodeAt(g) == 60 || j.charCodeAt(g) == 62 || j.charCodeAt(g) == 34 || j.charCodeAt(g) == 63) {            i = false        }        if (!i) {            break        }    }    return this.optional(f) || i}, "Illegal char wrong");jQuery.validator.addMethod("isZipCode", function (f, d) {    var e = /^[0-9]{6}$/;    return this.optional(d) || (e.test(f))}, "wrong zipcode");jQuery.validator.addMethod("isEmail", function (f, e) {    var d = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;    return this.optional(e) || (d.test(trim(f)))}, "wrong email");function replaceChar(c) {    var d = c.value.replace(/['"<> ?]/g, "");    c.value = d}function checkNameChar1(b) {    return /^[a-zA-Z0-9\u4E00-\u9FA5]+$/.test(b)}function trim(b) {    return b.replace(/(^\s*)|(\s*$)/g, "")}function ltrim(b) {    return b.replace(/(^\s*)/g, "")}function rtrim(b) {    return b.replace(/(\s*$)/g, "")}jQuery.validator.addMethod("validateName", function (c, d) {    return this.optional(d) || /^[a-zA-Z\u4E00-\u9FA50-9\_]+$/.test(c)}, "wrong username.");jQuery.validator.addMethod("studentRequired", function (d, e, f) {    if ($(f).val() == "3") {        return d && trim(d) != ""    }    return true}, "wrong studentRequired.");jQuery.validator.addMethod("studentStationRequired", function (d, e, f) {    if ($(f).val() == "3") {        return d && trim(d) != "简拼/全拼/汉字" && trim(d) != ""    }    return true}, "wrong studentStationRequired.");jQuery.validator.addMethod("studentValidateName", function (d, e, f) {    if ($(f).val() == "3") {        return this.optional(e) || /^[a-zA-Z\u4E00-\u9FA50-9\_]+$/.test(d)    }    return true}, "wrong username.");jQuery.validator.addMethod("checkStudentName", function (d, e, f) {    if ($(f).val() == "3") {        if ((!d || trim(d) == "" || trim(d) == "简拼/全拼/汉字")) {            return false        }    }    return true}, "wrong username.");jQuery.validator.addMethod("isQuestionNull", function (d, e, f) {    if (jQuery.trim(d) != "") {        if (jQuery.trim($(f[0]).val()) == "customQuestion" && jQuery.trim($(f[1]).val()) == "" || jQuery.trim($(f[0]).val()) == "") {            return false        }    }    return true}, "you should input the question");jQuery.validator.addMethod("isAnswerNull", function (d, e, f) {    if ((jQuery.trim($(f[0]).val()) == "customQuestion" && jQuery.trim($(f[1]).val()) != "") || (jQuery.trim($(f[0]).val()) != "")) {        if (jQuery.trim(d) == "") {            return false        }    }    return true}, "you should input the answer");function checkSex(f, d, e) {    if (!checkSexByCardId(f, d, e)) {        if (!confirm("性别与身份证中的性别不符，是否继续?")) {            return false        } else {            return true        }    } else {        return true    }}function checkSexByCardId(j, h, g) {    function f(c, b) {        var d = null;        if (b.length == 15) {            d = b.substring(14, 15)        } else {            if (b.length == 18) {                d = b.substring(16, 17)            } else {                return true            }        } if (d == "x" || d == "X") {            d = "10"        }        var e = parseInt(d);        var a = e % 2;        if (a === 0 && c === "F") {            return true        } else {            if (a === 1 && c === "M") {                return true            } else {                return false            }        }    }    var i = $(g).val();    if (checkIfSecIdCard($(h).val()) && validateSecIdCard(i)) {        if (i !== "") {            return f(j, i)        } else {            return true        }    } else {        if (checkIfFirIdCard($(h).val()) && validateFirIdCard(i)) {            if (i !== "") {                return f(j, i)            } else {                return true            }        } else {            return true        }    }}function checkBirdDateByCardId(j, h, f) {    var g = null;    var i = $(f).val();    if (checkIfSecIdCard($(h).val()) && i !== "" && validateSecIdCard(i)) {        g = i.substring(6, 14)    } else {        if (checkIfFirIdCard($(h).val()) && i !== "" && validateFirIdCard(i)) {            if (i.length == 15) {                g = "19" + i.substring(6, 12)            } else {                if (i.length == 18) {                    g = i.substring(6, 14)                }            }        } else {            return true        }    } if (j !== "") {        j = j.replace(/-/g, "");        if (j != g) {            return false        } else {            return true        }    } else {        return true    }}function checkBirdate(f, d, e) {    if (!checkBirdDateByCardId(f, d, e)) {        if (!confirm("出生日期与身份证中的出生日期不符，是否继续?")) {            return false        } else {            return true        }    } else {        return true    }}jQuery.validator.addMethod("checkPwdValidate", function (c, d) {    return this.optional(d) || /(?![a-z]+$|[0-9]+$|_+$)^[a-zA-Z0-9_]{6,}$/.test(c)}, "contain writespace");jQuery.validator.addMethod("checkConfirmPassWard", function (d, e, f) {    if ($(f).val() != null) {        return $(f).val() == d    }    return true}, "contain writespace");jQuery.validator.addMethod("IVR_passwd_format", function (d, e) {    var f = /^[0-9]{6}$/;    return this.optional(e) || f.test(d)}, "验证码错误!.");jQuery.validator.addMethod("checkStation", function (c, d) {    if ((!c || trim(c) == "" || trim(c) == "简拼/全拼/汉字" || trim(c) == "简拼/全拼/汉字或↑↓")) {        return false    }    return true}, "wrong username.");jQuery.validator.addMethod("checkAnsyUserName", function (j, l, i) {    var g = i[0];    var k = $("#" + i[1]).val();    var h = true;    $.ajax({        url: g + "?user_name=" + j,        type: "get",        async: false,        success: function (b, a) {            if (b.data == true) {                h = false            } else {                h = true            }        },        error: function (c, a, b) {            h = false        }    });    return h}, "wrong cardNo");function checkPwdRank(h, g, i) {    var f = $(h);    var j = f.val();    if (j.length <= 6 || new RegExp("^[a-zA-Z]{6,}$").test(j) || new RegExp("^[0-9]{6,}$").test(j) || new RegExp("^[_]{6,}$").test(j)) {        $("#" + g).attr("title", "危险");        $("#" + i).html("危险");        $("#" + g).removeClass("rank-a");        $("#" + g).removeClass("rank-b");        $("#" + g).removeClass("rank-c");        $("#" + g).addClass("rank-a")    } else {        if (j.length > 6 && new RegExp("[a-zA-Z]").test(j) && new RegExp("[0-9]").test(j) && new RegExp("[_]").test(j)) {            $("#" + g).attr("title", "安全");            $("#" + i).html("安全");            $("#" + g).removeClass("rank-a");            $("#" + g).removeClass("rank-b");            $("#" + g).removeClass("rank-c");            $("#" + g).addClass("rank-c")        } else {            $("#" + g).attr("title", "一般");            $("#" + i).html("一般");            $("#" + g).removeClass("rank-a");            $("#" + g).removeClass("rank-b");            $("#" + g).removeClass("rank-c");            $("#" + g).addClass("rank-b")        }    }}Array.prototype.unique = function () {    var d = {}, e = this.length;    for (var f = 0; f < e; f++) {        if (typeof d[this[f]] == "undefined") {            d[this[f]] = 1        }    }    this.length = 0;    e = 0;    for (var f in d) {        this[e++] = f    }    return this};function checkSearchPwdRank(k, p, l) {    var n = $(k);    var m = n.val();    if (m.length < 6) {        $("#" + p).attr("title", "危险");        $("#" + l).html("危险");        $("#" + p).removeClass("rank-a");        $("#" + p).removeClass("rank-b");        $("#" + p).removeClass("rank-c");        $("#" + p).addClass("rank-a")    } else {        var j = [];        for (var i = 0; i < 6; i++) {            j.push(m.charAt(i))        }        j = j.unique();        var o = j.length;        if (o == 1) {            $("#" + p).attr("title", "危险");            $("#" + l).html("危险");            $("#" + p).removeClass("rank-a");            $("#" + p).removeClass("rank-b");            $("#" + p).removeClass("rank-c");            $("#" + p).addClass("rank-a")        } else {            if (o > 1 && o < 5) {                $("#" + p).attr("title", "一般");                $("#" + l).html("一般");                $("#" + p).removeClass("rank-a");                $("#" + p).removeClass("rank-b");                $("#" + p).removeClass("rank-c");                $("#" + p).addClass("rank-b")            } else {                $("#" + p).attr("title", "安全");                $("#" + l).html("安全");                $("#" + p).removeClass("rank-a");                $("#" + p).removeClass("rank-b");                $("#" + p).removeClass("rank-c");                $("#" + p).addClass("rank-c")            }        }    }};var defaultLoadGrayBackgroundModalbox = "";var loadGrayBackground;var unLoadGrayBackground;(function () {    loadGrayBackground = function () {        var a = dhtmlx.modalbox({            targSrc: '<div><img src="' + ctx + 'resources/images/loading.gif"></img></div>',            callback: function () {}        });        defaultLoadGrayBackgroundModalbox = a    };    unLoadGrayBackground = function () {        if (defaultLoadGrayBackgroundModalbox != "") {            dhtmlx.modalbox.hide(defaultLoadGrayBackgroundModalbox);            defaultLoadGrayBackgroundModalbox = ""        }    }})();var ticket_submit_order = {    ticket_type: {        adult: "1",        child: "2",        student: "3",        disability: "4"    },    ticket_type_name: {        "1": "成人票",        "2": "孩票",        "3": "学生票",        "4": "伤残军人票"    },    tour_flag: {        dc: "dc",        wc: "wc",        fc: "fc",        gc: "gc",        lc1: "l1",        lc2: "l2"    },    passenger_type: {        adult: "1",        child: "2",        student: "3",        disability: "4"    },    passenger_card_type: {        two: "1",        one: "2",        tmp: "3",        passport: "B",        hongkong_macau: "C",        taiwan: "G"    },    request_flag: {        isAsync: "1"    },    ticket_query_flag: {        query_commom: "00",        query_student: "0X00"    },    seatType: {        yz_type: "1"    },    special_areas: {        lso: "LSO",        dao: "DAO",        ado: "ADO",        nqo: "NQO",        tho: "THO"    }};var submitorder_messages = {    "message.confirm": "您确认吗？",    "message.info": "信息提示",    "button.ok": "确认",    "message.error": "错误提示"};